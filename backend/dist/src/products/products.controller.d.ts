import { ProductsService } from './products.service';
import { CreateProductDto } from './dto/create-product.dto';
import { UpdateProductDto } from './dto/update-product.dto';
export declare class ProductsController {
    private readonly productsService;
    constructor(productsService: ProductsService);
    findAll(): Promise<({
        subcategory: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string | null;
            slug: string;
            categoryId: string;
        };
    } & {
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    })[]>;
    findOne(id: string): Promise<{
        subcategory: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string | null;
            slug: string;
            categoryId: string;
        };
    } & {
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    findBySlug(slug: string): Promise<{
        subcategory: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string | null;
            slug: string;
            categoryId: string;
        };
    } & {
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    create(dto: CreateProductDto): Promise<{
        subcategory: {
            name: string;
            id: string;
            createdAt: Date;
            updatedAt: Date;
            description: string | null;
            slug: string;
            categoryId: string;
        };
    } & {
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    update(id: string, dto: UpdateProductDto): Promise<{
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    updateBySlug(slug: string, dto: UpdateProductDto): Promise<{
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    remove(id: string): Promise<{
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
    removeBySlug(slug: string): Promise<{
        name: string;
        isActive: boolean;
        id: string;
        createdAt: Date;
        updatedAt: Date;
        description: string | null;
        slug: string;
        subcategoryId: string;
        brand: string;
        imageUrl: string | null;
        weight: number | null;
        height: number | null;
        width: number | null;
        depth: number | null;
        price: number;
        currency: import(".prisma/client").$Enums.Currency;
        stock: number;
    }>;
}
